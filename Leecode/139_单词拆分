//url:https://leetcode-cn.com/problems/word-break/

bool wordBreak(string s, vector<string>& wordDict) {
    // deque<string> bfs;
    // bfs.push_back(s);
    // set<string> visited;
    // visited.insert(s);
    // while (!bfs.empty()) {
    //     string temp = bfs.front();
    //     bfs.pop_front();
    //     for (int i = 0; i < wordDict.size(); ++i) {
    //         int pos = temp.find(wordDict[i]);
    //         if (pos != temp.npos&&pos==0) {
    //             string eraseTemp = temp;
    //             eraseTemp.erase(pos, wordDict[i].size());
    //             if (eraseTemp.size() == 0) {
    //                 return true;
    //             }
    //             if(visited.find(eraseTemp)==visited.end()){
    //                 bfs.push_back(eraseTemp);
    //                 visited.insert(eraseTemp);
    //             }  
    //         }
    //     }
    // }
    // return false;
}
//还有DFS解法与动态规划解法，暂未尝试
